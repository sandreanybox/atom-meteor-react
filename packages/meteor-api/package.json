{
  "name": "meteor-api",
  "main": "./lib/meteor-api",
  "version": "2.20.0",
  "description": "Meteor API for the Atom editor.",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/awatson1978/meteor-api.git"
  },
  "license": "MIT",
  "engines": {
    "atom": ">0.50.0",
    "node": "*"
  },
  "dependencies": {},
  "readme": "Meteor API for the Atom Editor\n=======================================\n\nBring Isomorphic Meteor javascript to the editor with autocomplete, code snippets, color-coded grammar, syntax highlighting, and more!  Code faster and with fewer mistakes!  \n\n---------------------------------------\n#### Meteor API Version  \n\n1.0.3.1\n\n---------------------------------------\n#### Installation  \n\nSimply go to **Atom > Preferences > Packages**, search for ``Meteor Api``, and install the package!  Then just be sure to select ``Javascript (Meteor)`` as your grammar.\n\n![Javascript Grammar Select](https://raw.githubusercontent.com/awatson1978/meteor-api/master/screenshots/javascript-meteor-select.png)  \n\n\nIf you'd like to permanently make all javascript default to the ``Javascript (Meteor)`` grammar, disable the ``language-javascript`` package!\n\n---------------------------------------\n#### Color Coded Meteor Syntax  \n\n![Meteor-Api Code Sample](https://raw.githubusercontent.com/awatson1978/meteor-api/master/screenshots/code-sample.png)  \n\n\n---------------------------------------\n#### Meteor API Code Snippets  \n\n[Complete List of Covered Meteor API Syntax](https://github.com/awatson1978/meteor-api/blob/master/api.md)\n\n![Meteor-Api Grammar](https://raw.githubusercontent.com/awatson1978/meteor-api/master/screenshots/grammar-snippets.png)  \n\n\n\n---------------------------------------\n#### Setting Up Atom As an Integrated Development Environment\n\nIf you want even more Meteor integration, try installing the following packages for an integrated, isomorphic, pure-javascript development environment.  (This list will be updated as new packages are added to the Atom ecosystem).  \n\n````sh\nAtom Lint\nAtom Beautify\nAtom Handlebars\nAtom Jshint\nAtom Prettify\nAutocomplete\nAutocomplete +\nBracket Matcher\nFile Types\nFiletype Color\nGrammar Selector\nLanguage Spacebars\nMeteor Api\nMeteor Helper\nWrap Guide\n````\n\nThen open your `config.cson` file with **Atom > Edit > Open Your Config** and add the following under `global`:\n\n````cson\n  'file-types':\n    'html': 'text.html.spacebars'\n    'js': 'source.js'\n````\n\n##### Enabling Handlebars Linting (a bit more hacky)\n\n1. go to **Atom > Preferences > Packages**, search for ``Linter Handlebars`` and install the package\n2. click on `Settings` to open its settings page and click on ``Open in Atom``\n3. edit the file `linter-handlebars/lib/linter-handlebars.cofee` and add `text.html.spacebars` to the list of supported syntaxes. At the time of writing this list appears on [line 7](https://github.com/AtomLinter/linter-handlebars/blob/master/lib/linter-handlebars.coffee#L7): make sure it eventually looks like:\n\n````coffeescript\n  @syntax: ['text.html.handlebars', 'source.hbs', 'source.handlebars', 'text.html.spacebars']\n````\n\nPlease be aware that you might need to repeat this editing operation everytime the package  ``Linter Handlebars`` gets updated.\n\n---------------------------------------\n#### Open Files From the Command Line\n\nIf you haven't created a symlink for atom, try the following snippet to launch Atom from the command line.  \n\n````sh\n# link your atom binary so it can be run from the command line\nsudo ln -s /Applications/Atom.app/Contents/MacOS/Atom /usr/local/bin/atom\n\n# open a file\nmeteor create helloworld\ncd helloworld\natom helloworld.js\n````\n\n\n---------------------------------------\n#### Acknowledgements / Contributors\n\nA big shoutout to ThusStyles for piecing together the original [meteor-snippets](https://github.com/ThusStyles/meteor-snippets) atom package!  And to zaku-eu for [language-spacebars](https://atom.io/packages/language-spacebars)!\n\n---------------------------------------\n#### Hacking on the Package\n\nWant to make modifications?  Take a look at your ``~/.atom/packages`` directory.  You should find ``~/.atom/packages/meteor-api``.  Move that somewhere, and clone this repo where it used to be.  (You'll want to fork it first to your own account.)\n\n````sh\n# download the meteor-api package to the correct location\ncd ~/.atom/packages\nmv meteor-api meteor-api-bkup\ngit clone http://github.com/damonmcminn/meteor-api\ncd meteor-api\n\n# make sure you're on a feature branch \ngit branch\ngit checkout -b syntax-highlighting\n\n# open a new atom editor in the current directory\n# we're using atom to hack on an atom package; spiffy recursive recursive!\natom .  \n```` \nYou'll then want to go into the ``meteor-api/grammars/`` directory and start hacking on ``meteor-api-grammar-javascript.cson`` and the other files there.  \n\nThe hotkey command to reload the packages into Atom is ``Control+Option+Command+L``.  \n\n\n---------------------------------------\n#### Todo\n\n- [x] [Blaze Syntax Highlighting](http://stackoverflow.com/questions/22363070/how-do-i-make-a-default-syntax-by-filetype-in-atom-text-editor)  \n- [x] [Handelbars/Spacebars Syntax](https://atom.io/packages/atom-handlebars)  \n- [ ] [Meteor Version of Autocomplete](https://atom.io/packages/autocomplete-plus)  \n- [ ] [Meteor Version of Extract Method](https://atom.io/packages/extract-method)  \n- [ ] [Meteor Symbols](https://github.com/atom/symbols-view)  \n- [ ] [Meteor Symbols: Goto Declaration](https://github.com/atom/symbols-view/issues/9)  \n\n\n``ctags -R .`` for extracting method definitions; add ctags file to meteor projects\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/awatson1978/meteor-api/issues"
  },
  "homepage": "https://github.com/awatson1978/meteor-api#readme",
  "_id": "meteor-api@2.20.0",
  "_shasum": "f7d7bb9aba0649f7b38d26c62fa315ff2944f603",
  "_resolved": "file:../d-116525-25515-bgjhy8/package.tgz",
  "_from": "../d-116525-25515-bgjhy8/package.tgz",
  "_atomModuleCache": {
    "version": 1,
    "dependencies": [],
    "extensions": {
      ".json": [
        "package.json"
      ]
    },
    "folders": []
  }
}